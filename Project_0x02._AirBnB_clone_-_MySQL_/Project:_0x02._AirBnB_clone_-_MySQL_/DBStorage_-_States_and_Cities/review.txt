1 - Title : Files exist
	Type : Requirement

2 - Title : Test create State name="California" is present (new feature) - DBStorage
	Type : Requirement
	File : create_fake_console.py

3 - Title : Test create State name="California" + create City state_id="<new state ID>" name="Fremont" is present (more than one parameter) - DBStorage
	Type : Requirement
	File : create_fake_console.py

4 - Title : Test create State name="California" + create City state_id="<new state ID>" name="San_Francisco" is present (space translated to _) - DBStorage
	Type : Requirement
	File : create_fake_console.py

5 - Title : Rollback code
	Type : Requirement

6 - Title : Table states exists
	Type : Code
	File : main_0_1.sql

7 - Title : Table cities exists
	Type : Code
	File : main_0_2.sql

8 - Title : Can create State with name via the console: create State name="California"
	Type : Code
	File : cmd_4

9 - Title : Can’t create State without name via the console: create State
	Type : Code
	File : cmd_5

10 - Title : Can list all State in MySQL (created outside the program)
	Type : Code
	File : main_6.py

11 - Title : Can create City with state_id (existing) and name via the console: create City state_id="<existing state id>" name="Fremont"
	Type : Code
	File : main_13.py

12 - Title : Can’t create City with only state_id (existing) via the console: create City state_id="<existing state id>"
	Type : Code
	File : main_14.py

13 - Title : Can’t create City with state_id (not existing) via the console: create City state_id="<not existing state id>" name="Fremont"
	Type : Code
	File : main_15.py

14 - Title : Can’t create City with only name via the console: create City name="Fremont"
	Type : Code
	File : main_16.py

15 - Title : Can list all City in MySQL (created outside the program)
	Type : Code
	File : main_17.py

